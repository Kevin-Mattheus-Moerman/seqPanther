#!/usr/bin/env python

import click
import pandas as pd
from os import path
from pyfaidx import Fasta


def alt_nuc(info_dict):
    refnuc = info_dict["Reference Nucleotide"]
    to_keep = []
    for alt_nuc_pt in info_dict["Nucleotide Percent"].split(","):
        if alt_nuc_pt.split(":")[0] != refnuc:
            to_keep.append(refnuc + ":" + alt_nuc_pt)
    return ",".join(to_keep)


@click.command(context_settings={'help_option_names': ["-h", "--help"]},
               no_args_is_help=True)
@click.option("-s",
              "--sub",
              "sub",
              help="Substitution table generated by codoncounter",
              type=str,
              default=None,
              show_default=True)
@click.option("-i",
              "--indel",
              "indel",
              help="Indel table generated by codoncounter",
              type=str,
              default=None,
              show_default=True)
@click.option("-a",
              "--min_alt",
              "min_alt",
              help="Minimum alternative nucleotide %",
              type=float,
              default=5,
              show_default=True)
def run(sub, indel, min_alt):
    "Please input csv files generated by codoncounter"
    if not sub and not indel:
        exit("No input file given. Exiting")

    changed_table = []
    if sub:
        if path.isfile(sub):
            sub = pd.read_csv(sub,
                              usecols=[
                                  "Sample", "pos", "read_count",
                                  "Reference Nucleotide", "Nucleotide Percent"
                              ]).rename(columns={"pos": "coor"})
            print(sub)
            sub = sub[sub["Nucleotide Percent"] >= min_alt]
            sub["sub"] = sub.apply(alt_nuc, axis=1)
            sub["type"] = "sub"
            changed_table.append(sub[["Sample", "coor", "type", "sub"]])

        else:
            exit(f"Given {sub} is not file")
    if indel:
        if path.isfile(indel):
            indel = pd.read_csv(indel,
                                usecols=[
                                    "Sample", "coor", 'Nucleotide Frequency',
                                    'Nucleotide Percent'
                                ])

            indel = indel[indel["Nucleotide Percent"] >= min_alt]
            indel['type'] = indel["Nucleotide Frequency"].apply(
                lambda x: x[:3])
            indel["Nucleotide Frequency"] = indel[
                "Nucleotide Frequency"].apply(lambda x: x[3:])
            indel["sub"] = "-"
            indel.loc[indel["type"] == "del",
                      "sub"] = indel.loc[indel["type"] == "del"].apply(
                          lambda x: x["Nucleotide Frequency"].split(':')[0] +
                          ":" + "-" * len(x["Nucleotide Frequency"].split(':')[
                              0]) + ":" + str(x['Nucleotide Percent']),
                          axis=1)  # Add more values here
            indel.loc[indel["type"] == "ins",
                      "sub"] = indel.loc[indel["type"] == "ins"].apply(
                          lambda x: "-" + ":" + x["Nucleotide Frequency"].
                          split(':')[0] + ":" + str(x['Nucleotide Percent']),
                          axis=1)

            changed_table.append(indel[["Sample", "coor", "type", "sub"]])
        else:
            exit(f"Given {indel} is not file")
    changed_table = pd.concat(changed_table)  # TODO: Request for coodrinates
    changed_table = changed_table.sort_values("coor", ascending=True)
    # changed_table = changed_table.groupby("Sample")["sub"].apply(
    # lambda x: ','.join(list(x)))
    for samp in changed_table["Sample"].unique():

        changed_table[changed_table["Sample"] == samp].to_csv(f"{samp}.tsv",
                                                              index=False,
                                                              sep="\t")
    print(
        "Output file genrated, please remove not required changes from the files"
    )


if __name__ == "__main__":
    run()
    # run("../CodonCounter/sub_output.csv", "../CodonCounter/indel_output.csv",
    # None, "../CodonCounter/test_data/NC_045512.2.fasta", "xxx")
