#!/usr/bin/env python

import click
import pandas as pd
from os import path, system
from pyfaidx import Fasta
from glob import glob


def indel2sub(indel, ref):
    """Converts indels to Substitution form."""
    indel = pd.read_csv(
        indel, usecols=["coor", 'Nucleotide Frequency', 'Nucleotide Percent'])
    print(indel)
    indel['type'] = indel["Nucleotide Frequency"].apply(lambda x: x[:3])
    indel["Nucleotide Frequency"] = indel["Nucleotide Frequency"].apply(
        lambda x: x[3:])
    indel["sub"] = "-"
    indel.loc[indel["type"] == "del", "sub"] = indel.loc[
        indel["type"] == "del", ["coor", "Nucleotide Frequency"]].apply(
            lambda x: x["Nucleotide Frequency"].split(':')[0] + ":" + indel[
                "coor"].apply(str) + ":" + "-" * len(x["Nucleotide Frequency"].
                                                     split(':')[0]),
            axis=1)  # Add more values here

    fasta = 'seq'  # pyfaidx.Fasta(ref)
    indel.loc[indel["type"] == "ins", "sub"] = indel.loc[
        indel["type"] == "ins",
        ["coor", "Nucleotide Frequency"]].apply(lambda x: fasta[x["coor"]] + x[
            "Nucleotide Frequency"].split(":")[0] + ":" + x["coor"].apply(
                str) + ":" + x["Nucleotide Frequency"].split(":")[0],
                                                axis=1)
    return indel


@click.command()
@click.option("-s",
              "--sub",
              "sub",
              help="Substitution table generated by codoncounter",
              type=str,
              default=None,
              show_default=True)
@click.option("-i",
              "--id",
              "indel",
              help="Indel table generated by codoncounter",
              type=str,
              default=None,
              show_default=True)
@click.option("-r",
              "--ref",
              "ref",
              help="Reference fasta file, containing only one sequence",
              type=str,
              default=None,
              show_default=True)
@click.option("-o",
              "--out",
              "out",
              help="Output file name",
              type=str,
              default=None,
              show_default=True,
              required=True)
def run(sub, indel, asm, ref, out):
    "Please input csv files generated by .... command"
    if not sub and not indel:
        exit("No input file given. Exiting")
    if not out:
        exit("No output file path given. Exiting")
    if not ref:
        exit("Reference sequence file must be provided. Exiting.")

    sequences = Fasta(ref)

    changed_table = []
    if sub:
        if path.isfile(sub):
            sub = pd.read_csv(sub,
                              usecols=[
                                  "Sample", "pos", "read_count",
                                  "Reference Nucleotide", "Nucleotide Percent"
                              ])
            sub["sub"] = sub["Reference Nucleotide"] + ":" + sub["pos"].apply(
                str) + ":" + sub["Nucleotide Percent"]
            changed_table.append(sub[["Sample", "sub"]])

        else:
            exit(f"Given {sub} is not file")
    if indel:
        if path.isfile(indel):
            indel = pd.read_csv(
                indel,
                usecols=["coor", 'Nucleotide Frequency', 'Nucleotide Percent'])
            indel['type'] = indel["Nucleotide Frequency"].apply(
                lambda x: x[:3])
            indel["Nucleotide Frequency"] = indel[
                "Nucleotide Frequency"].apply(lambda x: x[3:])
            indel["sub"] = "-"
            indel.loc[indel["type"] == "del", "sub"] = indel.loc[
                indel["type"] == "del",
                ["coor", "Nucleotide Frequency"]].apply(
                    lambda x: x["Nucleotide Frequency"].split(':')[
                        0] + ":" + indel["coor"].apply(str) + ":" + "-" * len(
                            x["Nucleotide Frequency"].split(':')[0]),
                    axis=1)  # Add more values here

            fasta = pyfaidx.Fasta(ref)
            indel.loc[indel["type"] == "ins", "sub"] = indel.loc[
                indel["type"] == "ins",
                ["coor", "Nucleotide Frequency"]].apply(
                    lambda x: fasta[x["coor"]] + x["Nucleotide Frequency"].
                    split(":")[0] + ":" + x["coor"].apply(str) + ":" + x[
                        "Nucleotide Frequency"].split(":")[0],
                    axis=1)
            changed_table.append(indel)
        else:
            exit(f"Given {indel} is not file")
    changed_table = pd.concat(changed_table)  # TODO: Request for coodrinates
    changed_table = changed_table.sort_values("coor", ascending=True)
    changed_table = changed_table.groupby("Sample")["sub"].apply(
        lambda x: ','.join(list(x)))
    changed_table.to_csv("", index=False, header=False, sep="\t")
    print(
        "Output file genrated, please remove not required changes from the file"
    )


if __name__ == "__main__":
    run()
    # run("../CodonCounter/sub_output.csv", "../CodonCounter/indel_output.csv",
    # None, "../CodonCounter/test_data/NC_045512.2.fasta", "xxx")
